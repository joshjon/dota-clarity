AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  dota-clarity

  SAM Template for dota-clarity

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10 

Parameters:
  Environment:
    Type: String
    Default: aws
    Description: (Required) The name of the environment you are working in - aws or local
    AllowedValues:
      - local
      - aws

Resources:
  ProfilesTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: ${AWS::StackName}-profiles-table
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
  MatchesTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: ${AWS::StackName}-matches-table
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: match_id
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: "match_id"
          KeyType: "RANGE"
  CreateProfileFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub ${AWS::StackName}-create-profile
      CodeUri: functions/profile/create_profile/
      Handler: create_profile.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProfilesTable
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          TABLE_NAME: !Ref ProfilesTable
          TABLE_ARN: !GetAtt ProfilesTable.Arn
      Events:
        CreateProfileAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /profiles/
            Method: POST
  GetProfileFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub ${AWS::StackName}-get-profile
      CodeUri: functions/profile/get_profile/
      Handler: get_profile.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProfilesTable
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          TABLE_NAME: !Ref ProfilesTable
          TABLE_ARN: !GetAtt ProfilesTable.Arn
      Events:
        GetProfileAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /profiles/{id}
            Method: GET
  CreateMatchFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Sub ${AWS::StackName}-create-match
      CodeUri: functions/match/create_match/
      Handler: create_match.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MatchesTable
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          TABLE_NAME: !Ref MatchesTable
          TABLE_ARN: !GetAtt MatchesTable.Arn
      Events:
        CreateMatchAPI:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /matches/{id}
            Method: POST
  DotaClarityS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: landing.html
        ErrorDocument: error.html
  DotaClarityS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: Dota Clarity Frontend Bucket Policy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref DotaClarityS3Bucket
                - /*
      Bucket: !Ref DotaClarityS3Bucket

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DotaClarityApi:
    Description: "API Gateway endpoint URL for Prod stage for Dota Clarity Functions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/profiles/"
  CreateProfileFunction:
    Description: "Dota Clarity Create Profile Lambda Function ARN"
    Value: !GetAtt CreateProfileFunction.Arn
  CreateProfileFunctionIamRole:
    Description: "Implicit IAM Role created for Dota Clarity Create Profile function"
    Value: !GetAtt CreateProfileFunction.Arn
  GetProfileFunction:
    Description: "Dota Clarity Get Profile Lambda Function ARN"
    Value: !GetAtt GetProfileFunction.Arn
  GetProfileFunctionIamRole:
    Description: "Implicit IAM Role created for Dota Clarity Get Profile function"
    Value: !GetAtt GetProfileFunction.Arn
  CreateMatchFunction:
    Description: "Dota Clarity Create Profile Lambda Function ARN"
    Value: !GetAtt CreateMatchFunction.Arn
  CreateMatchFunctionIamRole:
    Description: "Implicit IAM Role created for Dota Clarity Create Match function"
    Value: !GetAtt CreateMatchFunction.Arn
  WebsiteURL:
    Value: !GetAtt 
      - DotaClarityS3Bucket
      - WebsiteURL
    Description: URL for Dota Clarity website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - DotaClarityS3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content
